import java.util.ArrayList;
import java.util.List;

public class Levels {
    private final List<int[][]> levels;

    public Levels() {
        levels = new ArrayList<>();
        // Define your levels here
//        levels.add(new int[][]{
//                {0, 1, 1, 0, 0, 0, 1, 0, 0, 0},
//                {0, 0, 0, 1, 1, 0, 1, 1, 0, 0},
//                {0, 1, 1, 1, 0, 0, 0, 0, 0, 0},
//                {1, 1, 0, 1, 0, 1, 1, 1, 0, 0},
//                {0, 0, 0, 0, 1, 0, 1, 0, 1, 0},
//                {1, 1, 0, 1, 0, 1, 1, 0, 0, 0},
//                {0, 0, 0, 0, 1, 0, 0, 0, 1, 0},
//                {1, 0, 1, 1, 0, 1, 1, 0, 0, 0},
//                {0, 0, 0, 0, 1, 1, 0, 1, 0, 0},
//                {0, 1, 0, 0, 0, 0, 1, 0, 0, 0}
//        });


        levels.add(new int[][]{
                {0, 1, 1, 1, 0, 0, 0},
                {0, 0, 0, 1, 0, 1, 0},
                {1, 1, 0, 0, 0, 0, 0},
                {0, 0, 0, 1, 1, 1, 0},
                {0, 1, 0, 0, 0, 0, 0},
                {0, 0, 0, 1, 0, 1, 1},
                {1, 1, 0, 0, 0, 0, 0}
        });
        levels.add(new int[][]{
                {0, 1, 0, 0, 0, 0, 1, 1, 1, 0},
                {0, 1, 1, 1, 1, 0, 0, 0, 1, 0},
                {0, 0, 0, 0, 1, 1, 1, 0, 0, 0},
                {1, 1, 1, 0, 0, 0, 1, 1, 1, 0},
                {0, 0, 0, 1, 1, 0, 0, 0, 0, 0},
                {0, 1, 1, 1, 0, 1, 1, 1, 1, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
                {1, 1, 1, 1, 1, 1, 0, 1, 1, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {1, 1, 1, 1, 1, 1, 1, 1, 1, 0}
        });
        levels.add(new int[][]{
                {0, 0, 1, 1, 0, 1, 0, 0, 0, 0},
                {1, 0, 0, 1, 0, 1, 0, 1, 1, 0},
                {1, 1, 0, 0, 0, 1, 0, 0, 1, 0},
                {1, 0, 0, 1, 1, 1, 0, 0, 1, 0},
                {1, 0, 1, 1, 0, 0, 0, 0, 1, 0},
                {0, 0, 0, 0, 1, 1, 1, 0, 1, 0},
                {0, 1, 1, 0, 0, 0, 0, 0, 1, 0},
                {0, 0, 1, 1, 1, 1, 1, 0, 1, 0},
                {0, 1, 1, 0, 0, 0, 1, 0, 1, 0},
                {0, 0, 0, 0, 0, 0, 1, 0, 0, 0}
        });
        levels.add(new int[][]{
                {0, 0, 0, 1, 1, 1, 0, 0, 0, 0},
                {1, 1, 0, 1, 1, 1, 0, 1, 1, 0},
                {1, 1, 0, 1, 1, 1, 0, 1, 1, 0},
                {1, 1, 0, 0, 0, 0, 0, 0, 1, 0},
                {1, 1, 1, 1, 1, 1, 1, 0, 1, 0},
                {1, 1, 1, 1, 1, 1, 1, 0, 1, 0},
                {1, 1, 1, 1, 1, 1, 1, 0, 0, 0},
                {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
                {0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
                {0, 1, 1, 1, 1, 1, 1, 1, 1, 0}
        });
        levels.add(new int[][]{
                {0, 1, 0, 0, 0, 1, 1, 1, 1, 0},
                {0, 1, 0, 1, 1, 1, 1, 1, 1, 0},
                {0, 0, 0, 1, 0, 0, 0, 0, 1, 0},
                {1, 1, 0, 1, 0, 1, 1, 0, 1, 0},
                {0, 0, 0, 0, 0, 0, 1, 0, 1, 0},
                {0, 1, 1, 1, 1, 0, 0, 0, 1, 0},
                {0, 1, 1, 1, 1, 1, 1, 0, 1, 0},
                {0, 1, 1, 1, 1, 1, 1, 0, 1, 0},
                {0, 1, 1, 1, 1, 1, 1, 0, 0, 0},
                {0, 1, 1, 1, 1, 1, 1, 1, 1, 0}
        });
        levels.add(new int[][]{
                {0, 0, 1, 1, 1, 1, 1, 1, 1, 1},
                {0, 0, 0, 1, 1, 1, 1, 1, 1, 1},
                {1, 1, 0, 0, 0, 1, 1, 1, 1, 1},
                {1, 1, 1, 1, 0, 0, 0, 1, 1, 1},
                {1, 1, 1, 1, 1, 1, 0, 0, 0, 1},
                {1, 1, 1, 1, 1, 1, 1, 1, 0, 0},
                {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
                {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
                {1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
                {1, 1, 1, 1, 1, 1, 1, 1, 1, 0}
        });




        // Add more levels as needed
    }

    public int[][] getLevel(int index) {
        if (index >= 0 && index < levels.size()) {
            return levels.get(index);
        }
        return null; // Return null if the level index is invalid
    }

    public int getTotalLevels() {
        return levels.size();
    }
}

